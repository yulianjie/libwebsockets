name: Build libwebsockets for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive' # 如果libwebsockets有子模块，这会很有用

    - name: Set up Java Development Kit
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17' # 或您需要的Java版本

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.os }}-android-jni-static
    
    - name: Display NDK HOME
      shell: bash
      run: |
        echo "ANDROID_NDK_LATEST_HOME: ${ANDROID_NDK_LATEST_HOME}"
        ls -lh ${ANDROID_NDK_LATEST_HOME}
        
    - name: Download libwebsockets source
      run: |
        git clone https://github.com/warmcat/libwebsockets.git
        cd libwebsockets
        git checkout v4.3.6 # 替换为您想要编译的libwebsockets版本

    - name: Build libwebsockets for Android ARM64-v8a
      working-directory: libwebsockets
      run: |
        mkdir build_arm64-v8a
        cd build_arm64-v8a
        cmake \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI="arm64-v8a" \
          -DANDROID_PLATFORM=android-21 \
          -DLWS_WITH_SHARED=ON \
          -DLWS_WITH_STATIC=OFF \
          -DLWS_WITH_ZLIB=ON \
          -DLWS_WITH_SSL=ON \
          -DLWS_WITH_HTTP2=ON \
          -Wno-dev \
          -DENABLE_PROGRAMS=0 \
          -DCMAKE_BUILD_TYPE=Release \
          ..
        make -j

    - name: Build libwebsockets for Android armeabi-v7a
      working-directory: libwebsockets
      run: |
        mkdir build_armeabi-v7a
        cd build_armeabi-v7a
        cmake \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI="armeabi-v7a" \
          -DANDROID_PLATFORM=android-21 \
          -DLWS_WITH_SHARED=ON \
          -DLWS_WITH_STATIC=OFF \
          -DLWS_WITH_ZLIB=ON \
          -DLWS_WITH_SSL=ON \
          -DLWS_WITH_HTTP2=ON \
          -DCMAKE_BUILD_TYPE=Release \
          ..
        cmake --build . --target libwebsockets

    - name: Build libwebsockets for Android x86
      working-directory: libwebsockets
      run: |
        mkdir build_x86
        cd build_x86
        cmake \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI="x86" \
          -DANDROID_PLATFORM=android-21 \
          -DLWS_WITH_SHARED=ON \
          -DLWS_WITH_STATIC=OFF \
          -DLWS_WITH_ZLIB=ON \
          -DLWS_WITH_SSL=ON \
          -DLWS_WITH_HTTP2=ON \
          -DCMAKE_BUILD_TYPE=Release \
          ..
        cmake --build . --target libwebsockets

    - name: Build libwebsockets for Android x86_64
      working-directory: libwebsockets
      run: |
        mkdir build_x86_64
        cd build_x86_64
        cmake \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI="x86_64" \
          -DANDROID_PLATFORM=android-21 \
          -DLWS_WITH_SHARED=ON \
          -DLWS_WITH_STATIC=OFF \
          -DLWS_WITH_ZLIB=ON \
          -DLWS_WITH_SSL=ON \
          -DLWS_WITH_HTTP2=ON \
          -DCMAKE_BUILD_TYPE=Release \
          ..
        cmake --build . --target libwebsockets

    - name: Archive compiled libraries
      uses: actions/upload-artifact@v4
      with:
        name: libwebsockets-android-binaries
        path: |
          libwebsockets/build_arm64-v8a/lib/libwebsockets.so
          libwebsockets/build_armeabi-v7a/lib/libwebsockets.so
          libwebsockets/build_x86/lib/libwebsockets.so
          libwebsockets/build_x86_64/lib/libwebsockets.so
